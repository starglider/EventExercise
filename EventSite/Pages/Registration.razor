@page "/registration/{eventId:int}"
@using EventSite.Services
@inject EventsService EventsService
@inject NavigationManager Navigation

@code {
    [Parameter]
    public int EventId { get; set; }
    public Event? eventDetails { get; set; }


    public string userName { get; set; } = string.Empty;

        protected override async Task OnInitializedAsync()
    {
        eventDetails = await EventsService.GetEventByIdAsync(EventId);
        if (eventDetails == null)
        {
            eventDetails = new Event();
        }
    }

    private void AttendEvent()
    {
        // Logic to attend the event can be added here
        Navigation.NavigateTo("/eventlist");
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/eventlist");
    }
}

<h3>Event Details</h3>

@if (eventDetails != null)
{

    <EditForm Model="eventDetails" OnValidSubmit="AttendEvent">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div>
            <p><strong>Event Name:</strong> @eventDetails.Name</p>
            <p><strong>Date:</strong> @eventDetails.Date</p>
            <p><strong>Location:</strong> @eventDetails.Location</p>
            <p><strong>Description:</strong> @eventDetails.Description</p>
            
            <div>
                <label for="userName">User Name:</label>                <br/>

                <input id="userName" @bind="userName" size="50" required/>

                <ValidationMessage For="@(() => userName)" />
            </div>

            <button type="submit">Attend this Event</button>
            <button type="button" @onclick="GoBack">Back</button>
        </div>
    </EditForm>


}
else 
{
    <p>Event not found</p>
}

